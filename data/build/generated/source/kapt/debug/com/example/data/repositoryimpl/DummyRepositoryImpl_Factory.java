// Generated by Dagger (https://dagger.dev).
package com.example.data.repositoryimpl;

import com.example.data.mapper.DummyMapper;
import com.example.data.source.dummy.DummySrc;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DummyRepositoryImpl_Factory implements Factory<DummyRepositoryImpl> {
  private final Provider<DummySrc> dummySrcProvider;

  private final Provider<DummyMapper> dummyMapperProvider;

  public DummyRepositoryImpl_Factory(Provider<DummySrc> dummySrcProvider,
      Provider<DummyMapper> dummyMapperProvider) {
    this.dummySrcProvider = dummySrcProvider;
    this.dummyMapperProvider = dummyMapperProvider;
  }

  @Override
  public DummyRepositoryImpl get() {
    return newInstance(dummySrcProvider.get(), dummyMapperProvider.get());
  }

  public static DummyRepositoryImpl_Factory create(Provider<DummySrc> dummySrcProvider,
      Provider<DummyMapper> dummyMapperProvider) {
    return new DummyRepositoryImpl_Factory(dummySrcProvider, dummyMapperProvider);
  }

  public static DummyRepositoryImpl newInstance(DummySrc dummySrc, DummyMapper dummyMapper) {
    return new DummyRepositoryImpl(dummySrc, dummyMapper);
  }
}
